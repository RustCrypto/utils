name: zeroize

on:
  pull_request:
    paths:
      - ".github/workflows/zeroize.yml"
      - "zeroize/**"
      - "Cargo.*"
  push:
    branches: master

permissions:
  contents: read

defaults:
  run:
    working-directory: zeroize

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.61.0 # MSRV
          - stable
        target:
          - armv7a-none-eabi
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: cargo build --no-default-features --target ${{ matrix.target }}

  minimal-versions:
    uses: RustCrypto/actions/.github/workflows/minimal-versions.yml@master
    with:
      working-directory: ${{ github.workflow }}

  test:
    strategy:
      matrix:
        include:
          # 32-bit Linux
          - target: i686-unknown-linux-gnu
            platform: ubuntu-latest
            rust: 1.61.0 # MSRV
            deps: sudo apt update && sudo apt install gcc-multilib
          - target: i686-unknown-linux-gnu
            platform: ubuntu-latest
            rust: stable
            deps: sudo apt update && sudo apt install gcc-multilib

          # 64-bit Linux
          - target: x86_64-unknown-linux-gnu
            platform: ubuntu-latest
            rust: 1.61.0 # MSRV
          - target: x86_64-unknown-linux-gnu
            platform: ubuntu-latest
            rust: stable

          # 64-bit macOS x86_64
          - target: x86_64-apple-darwin
            platform: macos-latest
            rust: 1.61.0 # MSRV
          - target: x86_64-apple-darwin
            platform: macos-latest
            rust: stable

          # 64-bit Windows
          - target: x86_64-pc-windows-msvc
            platform: windows-latest
            rust: 1.61.0 # MSRV
          - target: x86_64-pc-windows-msvc
            platform: windows-latest
            rust: stable
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - run: ${{ matrix.deps }}
      - run: cargo test --target ${{ matrix.target }}
      - run: cargo test --target ${{ matrix.target }} --all-features

  # Cross-compiled tests
  cross:
    strategy:
      matrix:
        include:
          # PPC32
          - target: powerpc-unknown-linux-gnu
            rust: 1.61.0 # MSRV
          - target: powerpc-unknown-linux-gnu
            rust: stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: RustCrypto/actions/cross-install@master
      - run: cross test --target ${{ matrix.target }}

  aarch64:
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            rust: 1.61.0
          - target: aarch64-unknown-linux-gnu
            rust: stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - run: ${{ matrix.deps }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: RustCrypto/actions/cross-install@master
      - run: cross test --target ${{ matrix.target }} --all-features
